/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Employee;

import controller.Controller;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import org.knowm.xchart.CategoryChart;
import org.knowm.xchart.CategoryChartBuilder;
import org.knowm.xchart.SwingWrapper;
import org.knowm.xchart.XChartPanel;

/**
 *
 * @author Luis
 */
public class TotalSalesReport extends javax.swing.JFrame {

    Controller controller_;

    /**
     * Creates new form SalesVsBranchReport
     */
    public TotalSalesReport(Controller controller) {
        controller_ = controller;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        DatesPanel = new javax.swing.JPanel();
        InitialDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        InitialDateLabel = new javax.swing.JLabel();
        EndDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        EndDateLabel = new javax.swing.JLabel();
        ShowReportButton = new javax.swing.JButton();
        ChartPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DatesPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        DatesPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 11, 0, 0);
        DatesPanel.add(InitialDatePicker, gridBagConstraints);

        InitialDateLabel.setText("Fecha inicial");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 11, 0, 0);
        DatesPanel.add(InitialDateLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 0, 0);
        DatesPanel.add(EndDatePicker, gridBagConstraints);

        EndDateLabel.setText("Fecha final");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 18, 0, 0);
        DatesPanel.add(EndDateLabel, gridBagConstraints);

        ShowReportButton.setText("Mostrar reporte");
        ShowReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowReportButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 32, 12, 28);
        DatesPanel.add(ShowReportButton, gridBagConstraints);

        ChartPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        ChartPanel.setLayout(new javax.swing.BoxLayout(ChartPanel, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DatesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DatesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ShowReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowReportButtonActionPerformed
        LocalDate initialDate = this.InitialDatePicker.getDate();
        LocalDate endDate = this.EndDatePicker.getDate();
        if (initialDate == null || endDate == null) {
            JOptionPane.showMessageDialog(this, "Error: debe seleccionar el rango de fechas a buscar", "Error", JOptionPane.ERROR_MESSAGE);

        } else {

            Map<String, List> data = controller_.getSalesInfo(initialDate, endDate);

            JPanel chartPanelArea = new XChartPanel(this.getChart(data));
            ChartPanel.removeAll();
            ChartPanel.revalidate();
            ChartPanel.repaint();
            ChartPanel.add(chartPanelArea);
            ChartPanel.validate();

        }
    }//GEN-LAST:event_ShowReportButtonActionPerformed

    private CategoryChart getChart(Map<String, List> data) {
        List<String> branches = data.get("branches");
        List<Integer> values = data.get("values");

        CategoryChart chart = new CategoryChartBuilder().width(400).height(600).title("Total ventas por sede").xAxisTitle("Sedes").yAxisTitle("Ventas").build();

        chart.addSeries("Ventas", branches, values);
        chart.getStyler().setHasAnnotations(true);

        return chart;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChartPanel;
    private javax.swing.JPanel DatesPanel;
    private javax.swing.JLabel EndDateLabel;
    private com.github.lgooddatepicker.components.DatePicker EndDatePicker;
    private javax.swing.JLabel InitialDateLabel;
    private com.github.lgooddatepicker.components.DatePicker InitialDatePicker;
    private javax.swing.JButton ShowReportButton;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TotalSalesReport(new Controller()).setVisible(true);
            }
        });
    }
}
