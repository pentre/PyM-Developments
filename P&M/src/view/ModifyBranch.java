/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.*;
import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 *
 * @author Granada
 */
public class ModifyBranch extends javax.swing.JFrame {

    private Controller controller_;

    /**
     * Creates new form ModifyBranch
     */
    public ModifyBranch(Controller controller) {
        controller_ = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TopPanel = new javax.swing.JPanel();
        BranchNameLabel = new javax.swing.JLabel();
        BranchNameInputField = new javax.swing.JTextField();
        LoadBranchInfoButton = new javax.swing.JButton();
        BottomPanel = new javax.swing.JPanel();
        CityLabel = new javax.swing.JLabel();
        AddressLabel = new javax.swing.JLabel();
        OnChargeManagerIdLabel = new javax.swing.JLabel();
        UpdateButton = new javax.swing.JButton();
        AddressTextField = new javax.swing.JTextField();
        CityInputField = new javax.swing.JTextField();
        OnChargeManagerInputField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TopPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        BranchNameLabel.setText("Nombre de la sede:");

        BranchNameInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BranchNameInputFieldKeyTyped(evt);
            }
        });

        LoadBranchInfoButton.setText("Cargar datos");
        LoadBranchInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadBranchInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TopPanelLayout = new javax.swing.GroupLayout(TopPanel);
        TopPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BranchNameInputField)
                    .addGroup(TopPanelLayout.createSequentialGroup()
                        .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LoadBranchInfoButton)
                            .addComponent(BranchNameLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BranchNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BranchNameInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LoadBranchInfoButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BottomPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        CityLabel.setText("Ciudad:");

        AddressLabel.setText("Direcci√≥n:");

        OnChargeManagerIdLabel.setText("Id del gerente responsable:");

        UpdateButton.setText("Actualizar");
        UpdateButton.setEnabled(false);
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        AddressTextField.setEnabled(false);

        CityInputField.setEnabled(false);
        CityInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CityInputFieldKeyTyped(evt);
            }
        });

        OnChargeManagerInputField.setEnabled(false);
        OnChargeManagerInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OnChargeManagerInputFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout BottomPanelLayout = new javax.swing.GroupLayout(BottomPanel);
        BottomPanel.setLayout(BottomPanelLayout);
        BottomPanelLayout.setHorizontalGroup(
            BottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(CityLabel)
                        .addComponent(AddressLabel)
                        .addComponent(OnChargeManagerIdLabel)
                        .addComponent(AddressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                        .addComponent(CityInputField)
                        .addComponent(OnChargeManagerInputField))
                    .addComponent(UpdateButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BottomPanelLayout.setVerticalGroup(
            BottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CityLabel)
                .addGap(3, 3, 3)
                .addComponent(CityInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OnChargeManagerIdLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OnChargeManagerInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UpdateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TopPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enabled() {
        this.CityInputField.setEnabled(true);
        this.AddressTextField.setEnabled(true);
        this.OnChargeManagerInputField.setEnabled(true);
        this.UpdateButton.setEnabled(true);

        //These components are disabled to prevent changes on the branch name once the branch info is loaded
        this.BranchNameInputField.setEnabled(false);
        this.LoadBranchInfoButton.setEnabled(false);
    }

    private void disabled() {
        this.CityInputField.setEnabled(false);
        this.CityInputField.setText("");
        this.AddressTextField.setEnabled(false);
        this.AddressTextField.setText("");
        this.OnChargeManagerInputField.setEnabled(false);
        this.OnChargeManagerInputField.setText("");
        this.UpdateButton.setEnabled(false);

        //These components are activated again once the update is succesful in order to make another operation
        this.BranchNameInputField.setEnabled(true);
        this.LoadBranchInfoButton.setEnabled(true);
    }

    private void LoadBranchInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadBranchInfoButtonActionPerformed
        // TODO add your handling code here:
        if (this.BranchNameInputField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor insertar un nombre de sede", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;

        }

        String branchName = this.BranchNameInputField.getText();

        HashMap<String, String> branchInfo = new HashMap<>();

        branchInfo = controller_.getBranchInfo(branchName);

        if (branchInfo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existe una sede con ese nombre");
            disabled();
            return;
        }

        enabled();
        this.CityInputField.setText(branchInfo.get("city"));
        this.AddressTextField.setText(branchInfo.get("address"));
        this.OnChargeManagerInputField.setText(branchInfo.get("managerId"));

    }//GEN-LAST:event_LoadBranchInfoButtonActionPerformed

    private void CityInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CityInputFieldKeyTyped
        validateCharacters(evt);
    }//GEN-LAST:event_CityInputFieldKeyTyped

    private void OnChargeManagerInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OnChargeManagerInputFieldKeyTyped
        validateNumbers(evt);
    }//GEN-LAST:event_OnChargeManagerInputFieldKeyTyped

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        String name = this.BranchNameInputField.getText();
        String city = this.CityInputField.getText();
        String address = this.AddressTextField.getText();
        String managerId = this.OnChargeManagerInputField.getText();

        String message = controller_.updateBranch(name, city, address, managerId);

        JOptionPane.showMessageDialog(this, message);

        disabled();
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void BranchNameInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BranchNameInputFieldKeyTyped
        validateCharacters(evt);
    }//GEN-LAST:event_BranchNameInputFieldKeyTyped

    private void validateNumbers(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }

    private void validateCharacters(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if ((!Character.isLetter(c)) && (!Character.isWhitespace(c))) {
            evt.consume();
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JTextField AddressTextField;
    private javax.swing.JPanel BottomPanel;
    private javax.swing.JTextField BranchNameInputField;
    private javax.swing.JLabel BranchNameLabel;
    private javax.swing.JTextField CityInputField;
    private javax.swing.JLabel CityLabel;
    private javax.swing.JButton LoadBranchInfoButton;
    private javax.swing.JLabel OnChargeManagerIdLabel;
    private javax.swing.JTextField OnChargeManagerInputField;
    private javax.swing.JPanel TopPanel;
    private javax.swing.JButton UpdateButton;
    // End of variables declaration//GEN-END:variables
}
