/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Branch;

import controller.*;
import javax.swing.JOptionPane;
import java.util.Map;

/**
 *
 * @author Granada
 */
public class ModifyBranch extends javax.swing.JFrame {

    private Controller controller_;

    /**
     * Creates new form ModifyBranch
     */
    public ModifyBranch(Controller controller) {
        controller_ = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        branchNameLabel = new javax.swing.JLabel();
        branchNameInputField = new javax.swing.JTextField();
        loadBranchInfoButton = new javax.swing.JButton();
        bottomPanel = new javax.swing.JPanel();
        cityLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        addressTextField = new javax.swing.JTextField();
        cityInputField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        topPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        branchNameLabel.setText("Nombre de la sede:");

        branchNameInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                branchNameInputFieldKeyTyped(evt);
            }
        });

        loadBranchInfoButton.setText("Cargar datos");
        loadBranchInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadBranchInfoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(branchNameInputField)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loadBranchInfoButton)
                            .addComponent(branchNameLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(branchNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(branchNameInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loadBranchInfoButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bottomPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        cityLabel.setText("Ciudad:");

        addressLabel.setText("Direcci√≥n:");

        updateButton.setText("Actualizar");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        addressTextField.setEnabled(false);

        cityInputField.setEnabled(false);
        cityInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cityInputFieldKeyTyped(evt);
            }
        });

        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cityLabel)
                        .addComponent(addressLabel)
                        .addComponent(addressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                        .addComponent(cityInputField))
                    .addGroup(bottomPanelLayout.createSequentialGroup()
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cityLabel)
                .addGap(3, 3, 3)
                .addComponent(cityInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(cancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enabled() {
        cityInputField.setEnabled(true);
        addressTextField.setEnabled(true);
        updateButton.setEnabled(true);

        //These components are disabled to prevent changes on the branch name once the branch info is loaded
        branchNameInputField.setEnabled(false);
        loadBranchInfoButton.setEnabled(false);
    }

    private void disabled() {
        cityInputField.setEnabled(false);
        cityInputField.setText("");
        addressTextField.setEnabled(false);
        addressTextField.setText("");
        updateButton.setEnabled(false);

        //These components are activated again once the update is succesful in order to make another operation
        branchNameInputField.setEnabled(true);
        loadBranchInfoButton.setEnabled(true);
    }

    private void loadBranchInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadBranchInfoButtonActionPerformed
        // TODO add your handling code here:
        if (branchNameInputField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor insertar un nombre de sede", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;

        }

        String branchName = branchNameInputField.getText();

        Map<String, String> branchInfo = controller_.getBranchInfo(branchName);

        if (branchInfo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existe una sede con ese nombre");
            disabled();
            return;
        }

        enabled();
        cityInputField.setText(branchInfo.get("city"));
        addressTextField.setText(branchInfo.get("address"));
    }//GEN-LAST:event_loadBranchInfoButtonActionPerformed

    private void cityInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cityInputFieldKeyTyped
        validateCharacters(evt);
    }//GEN-LAST:event_cityInputFieldKeyTyped

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String name = this.branchNameInputField.getText();
        String city = this.cityInputField.getText();
        String address = this.addressTextField.getText();

        String message = controller_.updateBranch(name, city, address);

        JOptionPane.showMessageDialog(this, message);
        
        clearFields();
        disabled();
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void branchNameInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_branchNameInputFieldKeyTyped
        validateCharactersAndNumbers(evt);
    }//GEN-LAST:event_branchNameInputFieldKeyTyped

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void validateCharacters(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if ((!Character.isLetter(c)) && (!Character.isWhitespace(c))) {
            evt.consume();
        }
    }
    
    private void validateCharactersAndNumbers(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if ((!Character.isLetter(c)) && (!Character.isDigit(c)) && (!Character.isWhitespace(c))) {
            evt.consume();
        }
    }
    
    private void clearFields(){
        this.addressTextField.setText("");
        this.branchNameInputField.setText("");
        this.cityInputField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressTextField;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JTextField branchNameInputField;
    private javax.swing.JLabel branchNameLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cityInputField;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JButton loadBranchInfoButton;
    private javax.swing.JPanel topPanel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
