/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Employee;

import controller.Controller;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.knowm.xchart.CategoryChart;
import org.knowm.xchart.CategoryChartBuilder;
import org.knowm.xchart.CategorySeries;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.style.Styler;

/**
 *
 * @author Luis
 */
public class TotalSalesReport extends javax.swing.JFrame {

    Controller controller_;

    /**
     * Creates new form SalesVsBranchReport
     */
    public TotalSalesReport(Controller controller) {
        controller_ = controller;
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        ChartPanel = new javax.swing.JPanel();
        InitialDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        EndDatePicker = new com.github.lgooddatepicker.components.DatePicker();
        generateReport = new javax.swing.JLabel();
        exit = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ChartPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        ChartPanel.setLayout(new javax.swing.BoxLayout(ChartPanel, javax.swing.BoxLayout.LINE_AXIS));
        getContentPane().add(ChartPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 980, 470));
        getContentPane().add(InitialDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 270, 40));
        getContentPane().add(EndDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 270, 40));

        generateReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generateReportMouseClicked(evt);
            }
        });
        getContentPane().add(generateReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(701, 100, 230, 70));

        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        getContentPane().add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 0, 90, 40));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui_resources/Total Reports.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateReportMouseClicked
        LocalDate initialDate = this.InitialDatePicker.getDate();
        LocalDate endDate = this.EndDatePicker.getDate();
        
        if (initialDate == null | endDate == null | initialDate.compareTo(endDate) > 0) {
            JOptionPane.showMessageDialog(this, "Error: debe seleccionar un rango de fechas valido", "Error", JOptionPane.ERROR_MESSAGE);

        } else {

            Map<String, List> data = controller_.getSalesInfo(initialDate, endDate);
            
            
            if (this.getChart(data) == null){
                return;
            }
            JPanel chartPanelArea = new XChartPanel(this.getChart(data));
            ChartPanel.removeAll();
            ChartPanel.revalidate();
            ChartPanel.repaint();
            ChartPanel.add(chartPanelArea);
            ChartPanel.validate();

        }
    }//GEN-LAST:event_generateReportMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
        this.dispose();
    }//GEN-LAST:event_exitMouseClicked

    private CategoryChart getChart(Map<String, List> data) {
        List<String> branches = data.get("branches");
        List<Integer> values = data.get("values");
        
        if(branches.isEmpty() && values.isEmpty()){
            JOptionPane.showMessageDialog(this, "No hubo ninguna venta en las fechas dadas", "Mensaje", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        CategoryChart chart = new CategoryChartBuilder().width(400).height(600).title("Total ventas por sede").xAxisTitle("Sedes").yAxisTitle("Ventas").build();
        chart.addSeries("Ventas", branches, values);
        chart.getStyler().setHasAnnotations(true);
        chart.getStyler().setDefaultSeriesRenderStyle(CategorySeries.CategorySeriesRenderStyle.Bar);
        chart.getStyler().setLegendPosition(Styler.LegendPosition.InsideNW);

        return chart;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChartPanel;
    private com.github.lgooddatepicker.components.DatePicker EndDatePicker;
    private com.github.lgooddatepicker.components.DatePicker InitialDatePicker;
    private javax.swing.JLabel background;
    private javax.swing.JLabel exit;
    private javax.swing.JLabel generateReport;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TotalSalesReport(new Controller()).setVisible(true);
            }
        });
    }
}
